// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey-go/models/components"
)

type DeleteOverrideRequestBody struct {
	// The id of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceID *string `json:"namespaceId,omitempty"`
	// The name of the namespace. Namespaces group different limits together for better analytics. You might have a namespace for your public API and one for internal tRPC routes.
	NamespaceName *string `json:"namespaceName,omitempty"`
	// Identifier of your user, this can be their userId, an email, an ip or anything else. Wildcards ( * ) can be used to match multiple identifiers, More info can be found at https://www.unkey.com/docs/ratelimiting/overrides#wildcard-rules
	Identifier string `json:"identifier"`
}

func (o *DeleteOverrideRequestBody) GetNamespaceID() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceID
}

func (o *DeleteOverrideRequestBody) GetNamespaceName() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceName
}

func (o *DeleteOverrideRequestBody) GetIdentifier() string {
	if o == nil {
		return ""
	}
	return o.Identifier
}

// DeleteOverrideResponseBody - Successfully deleted a ratelimit override
type DeleteOverrideResponseBody struct {
}

type DeleteOverrideResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully deleted a ratelimit override
	Object *DeleteOverrideResponseBody
}

func (o *DeleteOverrideResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteOverrideResponse) GetObject() *DeleteOverrideResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
