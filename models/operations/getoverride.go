// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey-go/models/components"
)

type GetOverrideRequest struct {
	NamespaceID   *string `queryParam:"style=form,explode=true,name=namespaceId"`
	NamespaceName *string `queryParam:"style=form,explode=true,name=namespaceName"`
	Identifier    string  `queryParam:"style=form,explode=true,name=identifier"`
}

func (o *GetOverrideRequest) GetNamespaceID() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceID
}

func (o *GetOverrideRequest) GetNamespaceName() *string {
	if o == nil {
		return nil
	}
	return o.NamespaceName
}

func (o *GetOverrideRequest) GetIdentifier() string {
	if o == nil {
		return ""
	}
	return o.Identifier
}

// GetOverrideResponseBody - Details of the override for the given identifier
type GetOverrideResponseBody struct {
	ID         string `json:"id"`
	Identifier string `json:"identifier"`
	Limit      int64  `json:"limit"`
	Duration   int64  `json:"duration"`
	Async      *bool  `json:"async,omitempty"`
}

func (o *GetOverrideResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetOverrideResponseBody) GetIdentifier() string {
	if o == nil {
		return ""
	}
	return o.Identifier
}

func (o *GetOverrideResponseBody) GetLimit() int64 {
	if o == nil {
		return 0
	}
	return o.Limit
}

func (o *GetOverrideResponseBody) GetDuration() int64 {
	if o == nil {
		return 0
	}
	return o.Duration
}

func (o *GetOverrideResponseBody) GetAsync() *bool {
	if o == nil {
		return nil
	}
	return o.Async
}

type GetOverrideResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Details of the override for the given identifier
	Object *GetOverrideResponseBody
}

func (o *GetOverrideResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetOverrideResponse) GetObject() *GetOverrideResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
