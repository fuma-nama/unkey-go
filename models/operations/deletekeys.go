// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey-go/internal/utils"
)

type DeleteKeysRequestBody struct {
	// The id of the api, that the keys belong to.
	APIID string `json:"apiId"`
	// If true, the keys will be permanently deleted. If false, the keys will be soft-deleted and can be restored later.
	Permanent *bool `default:"false" json:"permanent"`
}

func (d DeleteKeysRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteKeysRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DeleteKeysRequestBody) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *DeleteKeysRequestBody) GetPermanent() *bool {
	if o == nil {
		return nil
	}
	return o.Permanent
}

// DeleteKeysResponseBody - The keys have been deleted
type DeleteKeysResponseBody struct {
	// The number of keys that were deleted
	DeletedKeys float64 `json:"deletedKeys"`
}

func (o *DeleteKeysResponseBody) GetDeletedKeys() float64 {
	if o == nil {
		return 0.0
	}
	return o.DeletedKeys
}
