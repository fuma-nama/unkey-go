// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey-go/internal/utils"
	"github.com/unkeyed/unkey-go/models/components"
)

type DeleteKeysRequestBody struct {
	// The id of the api, that the keys belong to.
	APIID string `json:"apiId"`
	// Delete the keys permanently, if false the keys will be marked as deleted but not removed from the database. In either case, the keys will no longer be valid when verifying them.
	Permanent *bool `default:"false" json:"permanent"`
}

func (d DeleteKeysRequestBody) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeleteKeysRequestBody) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DeleteKeysRequestBody) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *DeleteKeysRequestBody) GetPermanent() *bool {
	if o == nil {
		return nil
	}
	return o.Permanent
}

// DeleteKeysResponseBody - The keys have been deleted
type DeleteKeysResponseBody struct {
	// The number of keys that were deleted
	DeletedKeys int64 `json:"deletedKeys"`
}

func (o *DeleteKeysResponseBody) GetDeletedKeys() int64 {
	if o == nil {
		return 0
	}
	return o.DeletedKeys
}

type DeleteKeysResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The keys have been deleted
	Object *DeleteKeysResponseBody
}

func (o *DeleteKeysResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DeleteKeysResponse) GetObject() *DeleteKeysResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
