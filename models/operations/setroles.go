// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey-go/models/components"
)

type SetRolesRoles struct {
	// The id of the role. Provide either `id` or `name`. If both are provided `id` is used.
	ID *string `json:"id,omitempty"`
	// Identify the role via its name. Provide either `id` or `name`. If both are provided `id` is used.
	Name *string `json:"name,omitempty"`
	// Set to true to automatically create the permissions they do not exist yet. Only works when specifying `name`.
	//                 Autocreating roles requires your root key to have the `rbac.*.create_role` permission, otherwise the request will get rejected
	Create *bool `json:"create,omitempty"`
}

func (o *SetRolesRoles) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SetRolesRoles) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *SetRolesRoles) GetCreate() *bool {
	if o == nil {
		return nil
	}
	return o.Create
}

type SetRolesRequestBody struct {
	// The id of the key.
	KeyID string `json:"keyId"`
	// The roles you want to set for this key. This overwrites all existing roles.
	//             Setting roles requires the `rbac.*.add_role_to_key` permission.
	Roles []SetRolesRoles `json:"roles"`
}

func (o *SetRolesRequestBody) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

func (o *SetRolesRequestBody) GetRoles() []SetRolesRoles {
	if o == nil {
		return []SetRolesRoles{}
	}
	return o.Roles
}

type SetRolesResponseBody struct {
	// The id of the role. This is used internally
	ID string `json:"id"`
	// The name of the role
	Name string `json:"name"`
}

func (o *SetRolesResponseBody) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SetRolesResponseBody) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

type SetRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// All currently connected roles
	ResponseBodies []SetRolesResponseBody
}

func (o *SetRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *SetRolesResponse) GetResponseBodies() []SetRolesResponseBody {
	if o == nil {
		return nil
	}
	return o.ResponseBodies
}
